---
import StringInput from "../components/inputs/StringInput.astro";
import SelectInput from "../components/inputs/SelectInput.astro";
import BooleanInput from "../components/inputs/BooleanInput.astro";

const params = new URLSearchParams(Astro.url.search);
const requestedCollectionName = params.get("collection");

import { getSettings } from "../util/settings/getSettings";
const settings = await getSettings();

//* Placeholder for editing waters-cms-config file through portal
---

<section>
  <form id="admin-form" class="items-center w-3/4 mx-auto">
    <!-- Map Settings to inputs -->
    {
      Object.keys(settings.collections).map((collectionKey) => {
        const collection = settings.collections[collectionKey];
        if (collection && collection.name === requestedCollectionName) {
          return (
            <div class="">
              <h2 class="text-lg font-bold">{collection.label}</h2>
              {Object.keys(collection.fields).map((fieldKey) => {
                const field = collection.fields[fieldKey];
                if (field) {
                  let InputComponent;
                  switch (field.type) {
                    case "boolean":
                      InputComponent = BooleanInput;
                      break;
                    case "select":
                      InputComponent = SelectInput;
                      break;
                    case "string":
                    default:
                      InputComponent = StringInput;
                  }
                  return (
                    <InputComponent
                      label={field.label}
                      name={field.name}
                      required={field.required}
                      type={field.type}
                      options={field.options}
                    />
                  );
                }
                return null;
              })}
            </div>
          );
        }
        return null;
      })
    }

    <!-- Required data-astro-reload to work with View Transitions -->
    <button class="btn btn-primary mt-6" type="submit" data-astro-reload
      >Submit</button
    >
    <script>
      import { initialize } from "../util/initialize.js";

      await initialize();

      // Form Handling - Update waters-cms-settings
      document
        .getElementById("admin-form")!
        .addEventListener("submit", async (e) => {
          e.preventDefault();

          const formData = new FormData(e.target as HTMLFormElement);
          const data = Object.fromEntries(formData.entries());

          // Handle if nothing was submitted
          if (Object.keys(data).length === 0) {
            // TODO: Don't need to alert probably
            alert("No changes to submit");
            return;
          }

          try {
            const response = await fetch(
              "/waters-cms/api/form-update-settings",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
              }
            );

            const result = await response.json();
            alert(result.message);
          } catch (error) {
            console.error(error);
            alert("An error occurred");
          }
        });
    </script>
  </form>
</section>
