---
import StringInput from "./inputs/StringInput.astro";
import SelectInput from "./inputs/SelectInput.astro";
import BooleanInput from "./inputs/BooleanInput.astro";

const params = new URLSearchParams(Astro.url.search);
const requestedCollectionName = params.get("collection");

import { getSettings } from "../util/settings/getSettings";
const settings = await getSettings();
---

<section>
  <form id="admin-form" class="items-center w-3/4 mx-auto">
    <!-- Map Settings to inputs -->
    {
      Object.keys(settings.collections).map((collectionKey) => {
        const collection = settings.collections[collectionKey];
        if (collection && collection.name === requestedCollectionName) {
          return (
            <div class="">
              <h2 id="label" class="text-lg font-bold">
                {collection.label}
              </h2>
              {Object.keys(collection.fields).map((fieldKey) => {
                const field = collection.fields[fieldKey];
                if (field) {
                  let InputComponent;
                  switch (field.type) {
                    case "boolean":
                      InputComponent = BooleanInput;
                      break;
                    case "select":
                      InputComponent = SelectInput;
                      break;
                    case "string":
                    default:
                      InputComponent = StringInput;
                  }
                  return (
                    <InputComponent
                      label={field.label}
                      name={field.name}
                      required={field.required}
                      type={field.type}
                      options={field.options}
                    />
                  );
                }
                return null;
              })}
            </div>
          );
        }
        return null;
      })
    }

    <!-- Required data-astro-reload to work with View Transitions -->
    <button class="btn btn-primary mt-6" type="submit" data-astro-reload
      >Submit</button
    >
  </form>
</section>

<script>
  import { initialize } from "../util/initialize.js";

  await initialize();

  // Form Handling - Update collection api
  document
    .getElementById("admin-form")!
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      const formName = document.getElementById("label")!.innerHTML;

      const formData = new FormData(e.target as HTMLFormElement);
      const data = Object.fromEntries(formData.entries());

      const updateRequest = { collection: formName, data: data };

      try {
        const response = await fetch("/waters-cms/api/form-update-collection", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(updateRequest),
        });

        // TODO: Update to show changes were successful
        const result = await response.json();
      } catch (error) {
        console.error(error);
        alert("Unable to save changes.");
      }
    });
</script>
